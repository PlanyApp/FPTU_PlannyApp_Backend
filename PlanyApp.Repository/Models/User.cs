#nullable enable
// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace PlanyApp.Repository.Models;

[Table("Users")]
public class User
{
    public User() // Add constructor to initialize collections
    {
        // UserId will be generated by the database (DEFAULT NEWID()) and ValueGeneratedOnAdd() is configured.
        FullName = string.Empty;
        Email = string.Empty;
        PasswordHash = string.Empty;

        Challenges = new HashSet<Challenge>();
        Groups = new HashSet<Group>();
        GroupMembers = new HashSet<GroupMember>();
        Invoices = new HashSet<Invoice>();
        Plans = new HashSet<Plan>();
        Ratings = new HashSet<Rating>();
        UserChallengeProgresses = new HashSet<UserChallengeProgress>();
        // BookingsNavigation = new HashSet<Booking>(); // Still commented, model missing
        // UserPlansNavigation = new HashSet<UserPlan>(); // Still commented, model missing
        // GroupUsersNavigation = new HashSet<GroupUser>(); // Still commented, model missing
    }

    [Key]
    [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
    public int UserId { get; set; }

    [Required]
    [StringLength(255)]
    public string FullName { get; set; }

    [Required]
    [StringLength(255)]
    [EmailAddress]
    public string Email { get; set; }

    [Required]
    [StringLength(255)]
    public string PasswordHash { get; set; }

    [StringLength(15)]
    public string? Phone { get; set; }

    [StringLength(255)]
    public string? Address { get; set; }

    [StringLength(255)]
    public string? Avatar { get; set; }

    public int? RoleId { get; set; }

    [StringLength(255)]
    public string? GoogleId { get; set; } // For Google OAuth

    public bool EmailVerified { get; set; } // For email verification

    [StringLength(255)]
    public string? PasswordResetToken { get; set; } // For password reset

    [Column(TypeName = "datetime2(7)")]
    public DateTime? PasswordResetTokenExpiresAt { get; set; } // Expiry for password reset token

    public DateTime? CreatedDate { get; set; }

    public DateTime? UpdatedDate { get; set; }

    // Navigation properties
    [ForeignKey("RoleId")]
    public virtual Role? Role { get; set; }
    // public virtual ICollection<Booking> BookingsNavigation { get; set; } = new List<Booking>(); // Commented out
    // public virtual ICollection<UserPlan> UserPlansNavigation { get; set; } = new List<UserPlan>(); // Commented out
    // public virtual ICollection<GroupUser> GroupUsersNavigation { get; set; } = new List<GroupUser>(); // Commented out
    public virtual ICollection<Rating> Ratings { get; set; }
    public virtual ICollection<Challenge> Challenges { get; set; } // Challenges created by user
    public virtual ICollection<Group> Groups { get; set; } // For Groups where this user is the Owner
    public virtual ICollection<GroupMember> GroupMembers { get; set; } // For GroupMembers linking this user to groups
    public virtual ICollection<Invoice> Invoices { get; set; }
    public virtual ICollection<Plan> Plans { get; set; } // For Plans where this user is the Owner
    public virtual ICollection<UserChallengeProgress> UserChallengeProgresses { get; set; }
}